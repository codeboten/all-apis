var cacheList="/app/cachelist";var appRouter=function(a){a.get("/",function(c,b){b.contentType("application/json");b.send(JSON.stringify({message:"hello"}))});a.get("/commands",function(d,c){var b=[];b.push({name:"create-cache",parameters:["name,engine"]});b.push({name:"delete-cache",parameters:["name"]});b.push({name:"show-cache",parameters:["name"]});b.push({name:"list-cache",parameters:[]});c.contentType("application/json");c.send(JSON.stringify(b))});a.post("/caches",function(d,c){if(!d.body.name){return c.send({status:"error",message:"missing name"})}if(!d.body.engine){return c.send({status:"error",message:"missing engine"})}var b=require("fs");var e=JSON.parse(b.readFileSync(cacheList,"utf8"));e.caches.push({name:d.body.name,engine:d.body.engine});data=JSON.stringify(e);b.writeFile(cacheList,data,function(f){c.contentType("application/json");if(f){c.send({message:"error saving cache list"});return}c.send(data)})});a.get("/caches",function(d,c){var b=require("fs");b.readFile(cacheList,"utf8",function(e,f){c.contentType("application/json");if(e){c.send({message:"error reading cache list"});return}c.send(f)})});a.get("/caches/:name",function(d,c){var b=require("fs");b.readFile(cacheList,"utf8",function(h,j){c.contentType("application/json");if(h){c.send({message:"error reading cache list"});return}var k=JSON.parse(j);var f=k.caches;for(var g=0,e=f.length;g<e;g++){if(f[g]["name"]==d.params.name){c.send(JSON.stringify(f[g]));return}}c.send({message:"cache not found"})})})};module.exports=appRouter;